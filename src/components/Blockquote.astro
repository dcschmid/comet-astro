---
interface Props {
  author?: string;
  source?: string;
  variant?: 'default' | 'accent' | 'bordered';
  className?: string;
}

const { author, source, variant = 'default', className = '' } = Astro.props;

const variantClasses = {
  default:
    'border-l-4 border-slate-400 bg-slate-50 pl-6 pr-5 italic text-slate-900 shadow-sm dark:border-slate-500 dark:bg-slate-900/80 dark:text-slate-100',
  accent:
    'rounded-xl border border-blue-900 bg-blue-950 px-6 py-5 italic text-blue-50 shadow-md dark:border-blue-200 dark:bg-blue-100 dark:text-blue-950',
  bordered:
    'rounded-xl border border-slate-300 bg-white p-6 text-slate-900 shadow-sm dark:border-slate-600 dark:bg-slate-900/80 dark:text-slate-50',
};

const footerClasses = {
  default:
    'mt-4 flex flex-wrap gap-x-2 text-sm not-italic text-slate-700 dark:text-slate-200',
  accent:
    'mt-4 flex flex-wrap gap-x-2 text-sm not-italic text-blue-100 dark:text-blue-900',
  bordered:
    'mt-4 flex flex-wrap gap-x-2 text-sm not-italic text-slate-700 dark:text-slate-200',
} as const;

const citeClasses = {
  default: 'font-semibold text-slate-900 dark:text-slate-100',
  accent: 'font-semibold text-blue-50 dark:text-blue-950',
  bordered: 'font-semibold text-slate-900 dark:text-slate-100',
} as const;
---

<blockquote class={`${variantClasses[variant]} ${className}`}>
  <div class="text-lg leading-relaxed">
    <slot />
  </div>
  {
    (author || source) && (
      <footer class={footerClasses[variant]}>
        {author && <cite class={citeClasses[variant]}>{author}</cite>}
        {source && (
          <span>
            {author ? ', ' : ''}
            {source}
          </span>
        )}
      </footer>
    )
  }
</blockquote>
