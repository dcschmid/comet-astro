---
/**
 * Banner - top-of-page announcement bar
 */
type Variant = 'default' | 'success' | 'warning' | 'danger';

interface Action {
  label: string;
  href: string;
}

interface Props {
  title?: string;
  description?: string;
  variant?: Variant;
  dismissible?: boolean;
  action?: Action;
  icon?: string;
  sticky?: boolean;
  className?: string;
}

const {
  title,
  description,
  variant = 'default',
  dismissible = false,
  action,
  icon,
  sticky = false,
  className = '',
} = Astro.props as Props;

const styles: Record<
  Variant,
  {
    wrap: string;
    text: string;
    border: string;
    accent: string;
    ring: string;
    cta: string;
    dismiss: string;
  }
> = {
  default: {
    wrap: 'bg-slate-900 text-slate-100 dark:bg-slate-950 dark:text-slate-100',
    text: 'text-slate-100 dark:text-slate-100',
    border: 'border-slate-500/60 dark:border-slate-400/60',
    accent: 'text-slate-200 dark:text-slate-200',
    ring: 'focus-visible:ring-slate-100/70 focus-visible:ring-offset-slate-900 dark:focus-visible:ring-slate-200/70 dark:focus-visible:ring-offset-slate-950',
    cta: 'text-slate-950 hover:bg-slate-100 dark:hover:bg-slate-200',
    dismiss:
      'border-slate-300/70 text-slate-100 hover:bg-slate-800/70 dark:border-slate-200/60',
  },
  success: {
    wrap: 'bg-emerald-950 text-emerald-50',
    text: 'text-emerald-50',
    border: 'border-emerald-700/60',
    accent: 'text-emerald-200',
    ring: 'focus-visible:ring-emerald-200/70 focus-visible:ring-offset-emerald-950 dark:focus-visible:ring-emerald-100/80 dark:focus-visible:ring-offset-emerald-950',
    cta: 'text-emerald-950 hover:bg-emerald-50 dark:hover:bg-emerald-100',
    dismiss:
      'border-emerald-300/70 text-emerald-100 hover:bg-emerald-900/40 dark:border-emerald-200/60',
  },
  warning: {
    wrap: 'bg-amber-950 text-amber-50',
    text: 'text-amber-50',
    border: 'border-amber-700/70',
    accent: 'text-amber-200',
    ring: 'focus-visible:ring-amber-200/70 focus-visible:ring-offset-amber-950 dark:focus-visible:ring-amber-100/80 dark:focus-visible:ring-offset-amber-950',
    cta: 'text-amber-950 hover:bg-amber-50 dark:hover:bg-amber-100',
    dismiss:
      'border-amber-300/70 text-amber-100 hover:bg-amber-900/40 dark:border-amber-200/60',
  },
  danger: {
    wrap: 'bg-rose-950 text-rose-50',
    text: 'text-rose-50',
    border: 'border-rose-700/70',
    accent: 'text-rose-200',
    ring: 'focus-visible:ring-rose-200/70 focus-visible:ring-offset-rose-950 dark:focus-visible:ring-rose-100/80 dark:focus-visible:ring-offset-rose-950',
    cta: 'text-rose-950 hover:bg-rose-50 dark:hover:bg-rose-100',
    dismiss:
      'border-rose-300/70 text-rose-100 hover:bg-rose-900/40 dark:border-rose-200/60',
  },
};

const id = `banner-${Math.random().toString(36).slice(2, 10)}`;

const ctaBase =
  'inline-flex items-center gap-2 rounded-full border border-transparent bg-white px-4 py-2 text-sm font-semibold text-center shadow-sm transition focus-visible:outline-none focus-visible:ring-4 focus-visible:ring-offset-2 dark:bg-white';
const dismissBase =
  'ml-2 inline-flex h-9 w-9 items-center justify-center rounded-full border bg-transparent p-2 text-base leading-none transition focus-visible:outline-none focus-visible:ring-4 focus-visible:ring-offset-2';
---

<section
  id={id}
  class={`${sticky ? 'sticky top-0 z-40' : ''} ${styles[variant].wrap} border-b ${styles[variant].border} shadow-lg shadow-black/30 backdrop-blur ${className}`}
  data-banner
  role="status"
>
  <div class="mx-auto flex max-w-5xl items-center gap-4 px-6 py-4">
    <span class={`text-2xl ${styles[variant].accent}`} aria-hidden="true">
      {
        icon ||
          (variant === 'success'
            ? '‚úÖ'
            : variant === 'warning'
              ? '‚ö†Ô∏è'
              : variant === 'danger'
                ? '‚õî'
                : 'üîî')
      }
    </span>
    <div class="flex-1 space-y-1">
      {
        title && (
          <h2 class={`text-base font-semibold ${styles[variant].text}`}>
            {title}
          </h2>
        )
      }
      {
        description && (
          <p class={`text-sm ${styles[variant].text}`}>{description}</p>
        )
      }
      <slot />
    </div>
    {
      action && (
        <a
          href={action.href}
          class={`${ctaBase} ${styles[variant].cta} ${styles[variant].ring}`}
        >
          {action.label}
          <span aria-hidden="true">‚Üí</span>
        </a>
      )
    }
    {
      dismissible && (
        <button
          type="button"
          class={`${dismissBase} ${styles[variant].dismiss} ${styles[variant].ring}`}
          data-banner-close
          aria-label="Close banner"
        >
          √ó
        </button>
      )
    }
  </div>
</section>

<script is:inline>
  (() => {
    const script = document.currentScript;
    if (!(script instanceof HTMLScriptElement)) return;
    const root = script.previousElementSibling;
    if (!(root instanceof HTMLElement)) return;
    const closeButton = root.querySelector('[data-banner-close]');
    if (!(closeButton instanceof HTMLElement)) return;
    const prefersReducedMotion = window.matchMedia?.(
      '(prefers-reduced-motion: reduce)'
    );
    closeButton.addEventListener('click', () => {
      if (prefersReducedMotion?.matches) {
        root.remove();
        return;
      }
      root.style.animation = 'fadeOut 220ms ease forwards';
      window.setTimeout(() => root.remove(), 240);
    });
  })();
</script>

<style is:inline>
  @keyframes fadeOut {
    to {
      opacity: 0;
      transform: translateY(-8px);
    }
  }
</style>
