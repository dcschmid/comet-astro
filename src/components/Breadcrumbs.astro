---
/**
 * Breadcrumbs - navigation trail
 */
interface Crumb {
  href?: string;
  label: string;
  current?: boolean;
}

interface Props {
  items: Crumb[];
  ariaLabel?: string;
  className?: string;
}

const {
  items = [],
  ariaLabel = 'Breadcrumb',
  className = '',
} = Astro.props as Props;

const linkBase =
  'rounded-md px-1.5 py-1 text-slate-800 transition-colors duration-150 hover:text-blue-950 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-800 focus-visible:ring-offset-2 focus-visible:ring-offset-white dark:text-slate-100 dark:hover:text-blue-200 dark:focus-visible:ring-blue-300 dark:focus-visible:ring-offset-slate-900';
const currentBase = 'font-semibold text-slate-950 dark:text-white';
const separatorClass = 'text-slate-700 dark:text-slate-300';
---

<nav
  aria-label={ariaLabel}
  class={`max-w-full overflow-x-auto text-sm font-medium text-slate-700 dark:text-slate-100 ${className}`}
>
  <ol class="flex flex-nowrap items-center gap-x-3 gap-y-2 whitespace-nowrap">
    {
      items.map((c, i) => (
        <li class="flex items-center gap-2">
          {i > 0 && (
            <span aria-hidden="true" class={separatorClass}>
              /
            </span>
          )}
          {c.current || !c.href ? (
            <span
              aria-current={c.current ? 'page' : undefined}
              class={currentBase}
            >
              {c.label}
            </span>
          ) : (
            <a href={c.href} class={linkBase}>
              {c.label}
            </a>
          )}
        </li>
      ))
    }
  </ol>
</nav>
