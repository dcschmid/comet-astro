---
interface Props {
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  variant?: 'default' | 'primary' | 'white';
  label?: string;
  className?: string;
}

const { size = 'md', variant = 'default', label, className = '' } = Astro.props;

const sizeClasses = {
  xs: 'w-3 h-3 border-2',
  sm: 'w-4 h-4 border-2',
  md: 'w-6 h-6 border-2',
  lg: 'w-8 h-8 border-3',
  xl: 'w-12 h-12 border-4',
};

const variantClasses = {
  default:
    'border-slate-300 border-t-slate-700 dark:border-slate-700 dark:border-t-slate-200',
  primary:
    'border-blue-200 border-t-blue-600 dark:border-blue-900 dark:border-t-blue-300',
  white:
    'border-white/60 border-t-white dark:border-slate-200 dark:border-t-white',
};
---

<div class={`inline-flex items-center gap-2 ${className}`} role="status">
  <div
    class={`${sizeClasses[size]} ${variantClasses[variant]} rounded-full animate-spin`}
    aria-hidden="true"
  >
  </div>
  {
    label && (
      <span class="text-sm font-medium text-slate-800 dark:text-slate-200">
        {label}
      </span>
    )
  }
  <span class="sr-only">{label || 'Loading...'}</span>
</div>

<style>
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
  .animate-spin {
    animation: spin 0.8s linear infinite;
  }
</style>
