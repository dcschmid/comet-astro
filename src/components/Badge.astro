---
/**
 * Badge - small label indicator
 */
interface Props {
  label: string;
  variant?: 'neutral' | 'primary' | 'success' | 'warning' | 'danger';
  className?: string;
}

const { label, variant = 'neutral', className = '' } = Astro.props as Props;

const base =
  'inline-flex items-center rounded-full px-2.5 py-1 text-xs font-semibold tracking-wide';
const variantMap: Record<NonNullable<Props['variant']>, string> = {
  neutral:
    'border border-slate-800 bg-slate-900 text-slate-50 shadow-sm dark:border-slate-300 dark:bg-slate-100 dark:text-slate-950',
  primary:
    'border border-blue-800 bg-blue-950 text-white shadow-sm dark:border-blue-200 dark:bg-blue-100 dark:text-blue-950',
  success:
    'border border-emerald-800 bg-emerald-950 text-white shadow-sm dark:border-emerald-200 dark:bg-emerald-100 dark:text-emerald-950',
  warning:
    'border border-amber-700 bg-amber-950 text-white shadow-sm dark:border-amber-300 dark:bg-amber-100 dark:text-amber-950',
  danger:
    'border border-rose-800 bg-rose-950 text-white shadow-sm dark:border-rose-200 dark:bg-rose-100 dark:text-rose-950',
};
---

<span class={`${base} ${variantMap[variant]} ${className}`.trim()}>{label}</span
>
