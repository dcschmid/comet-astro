---
interface Props {
  variant?: 'info' | 'success' | 'warning' | 'error' | 'note';
  title?: string;
  icon?: string;
  className?: string;
}

const { variant = 'info', title, icon, className = '' } = Astro.props;

const variantStyles = {
  info: {
    border: 'border-blue-500',
    bg: 'bg-blue-50 dark:bg-blue-950',
    text: 'text-blue-800 dark:text-blue-200',
    icon: icon || '‚ÑπÔ∏è',
  },
  success: {
    border: 'border-emerald-500',
    bg: 'bg-emerald-50 dark:bg-emerald-950',
    text: 'text-emerald-800 dark:text-emerald-200',
    icon: icon || '‚úÖ',
  },
  warning: {
    border: 'border-amber-500',
    bg: 'bg-amber-50 dark:bg-amber-950',
    text: 'text-amber-800 dark:text-amber-200',
    icon: icon || '‚ö†Ô∏è',
  },
  error: {
    border: 'border-rose-500',
    bg: 'bg-rose-50 dark:bg-rose-950',
    text: 'text-rose-800 dark:text-rose-200',
    icon: icon || '‚ùå',
  },
  note: {
    border: 'border-indigo-500',
    bg: 'bg-indigo-50 dark:bg-indigo-950',
    text: 'text-indigo-800 dark:text-indigo-200',
    icon: icon || 'üìù',
  },
};

const styles = variantStyles[variant];
---

<div
  class={`rounded-xl border-l-4 ${styles.border} ${styles.bg} p-5 shadow-sm ${className}`}
  role="note"
>
  <div class="flex gap-3">
    {
      styles.icon && (
        <div class="flex-shrink-0 text-2xl" aria-hidden="true">
          {styles.icon}
        </div>
      )
    }
    <div class="flex-1">
      {
        title && (
          <p class={`mb-1 text-base font-semibold ${styles.text}`}>{title}</p>
        )
      }
      <div
        class="text-sm text-slate-700 dark:text-slate-200 [&>p]:mb-2 [&>p:last-child]:mb-0"
      >
        <slot />
      </div>
    </div>
  </div>
</div>
