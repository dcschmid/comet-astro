---
interface Props {
  src: string;
  title?: string;
  aspectRatio?: '16/9' | '4/3' | '1/1' | '21/9' | 'none';
  height?: number;
  allowFullscreen?: boolean;
  loading?: 'lazy' | 'eager';
  sandbox?: string;
  allow?: string;
  className?: string;
}

const {
  src,
  title = 'Embedded content',
  aspectRatio = '16/9',
  height,
  allowFullscreen = true,
  loading = 'lazy',
  sandbox,
  allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture',
  className = '',
} = Astro.props;

const ratioClasses = {
  '16/9': 'aspect-video',
  '4/3': 'aspect-[4/3]',
  '1/1': 'aspect-square',
  '21/9': 'aspect-[21/9]',
  none: '',
};

const hasAspectRatio = aspectRatio !== 'none';
const wrapperClass = hasAspectRatio
  ? `relative overflow-hidden rounded-xl border border-slate-200 bg-slate-950 ${ratioClasses[aspectRatio]} dark:border-slate-700`
  : 'rounded-xl overflow-hidden border border-slate-200 bg-slate-950 dark:border-slate-700';

const iframeClass = hasAspectRatio
  ? 'absolute inset-0 w-full h-full border-0'
  : 'w-full border-0';

const iframeStyle =
  !hasAspectRatio && height ? `height: ${height}px` : undefined;
---

<div class={`${wrapperClass} ${className}`}>
  <iframe
    src={src}
    title={title}
    allow={allow}
    allowfullscreen={allowFullscreen}
    loading={loading}
    sandbox={sandbox}
    class={iframeClass}
    style={iframeStyle}></iframe>
</div>
