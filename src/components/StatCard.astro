---
interface Props {
  label: string;
  value: string | number;
  icon?: string;
  trend?: number;
  trendLabel?: string;
  variant?: 'default' | 'gradient';
  className?: string;
}

const {
  label,
  value,
  icon,
  trend,
  trendLabel,
  variant = 'default',
  className = '',
} = Astro.props;

const isPositiveTrend = trend && trend > 0;
const isNegativeTrend = trend && trend < 0;

const variantClasses = {
  default:
    'border border-slate-200 bg-white shadow-sm dark:border-slate-800 dark:bg-slate-950',
  gradient:
    'border border-blue-200 bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 shadow-sm dark:border-blue-500/40 dark:from-blue-900/40 dark:via-purple-900/30 dark:to-blue-900/40',
};
---

<div class={`rounded-xl p-6 ${variantClasses[variant]} ${className}`.trim()}>
  <div class="mb-2 flex items-start justify-between">
    <p
      class="text-sm font-semibold uppercase tracking-wide text-slate-600 dark:text-slate-300"
    >
      {label}
    </p>
    {
      icon && (
        <span
          class="text-2xl text-slate-500 dark:text-slate-300"
          aria-hidden="true"
        >
          {icon}
        </span>
      )
    }
  </div>

  <div class="mb-3">
    <p class="text-3xl font-bold text-slate-900 dark:text-slate-100">{value}</p>
  </div>

  {
    (trend !== undefined || trendLabel) && (
      <div class="flex items-center gap-2 text-sm">
        {trend !== undefined && (
          <span
            class={`inline-flex items-center font-semibold ${
              isPositiveTrend
                ? 'text-emerald-700 dark:text-emerald-400'
                : isNegativeTrend
                  ? 'text-rose-700 dark:text-rose-400'
                  : 'text-slate-600 dark:text-slate-300'
            }`}
          >
            {isPositiveTrend && '↑'}
            {isNegativeTrend && '↓'}
            {Math.abs(trend)}%
          </span>
        )}
        {trendLabel && (
          <span class="text-slate-600 dark:text-slate-300">{trendLabel}</span>
        )}
      </div>
    )
  }
</div>
