---
interface Props {
  src: string;
  poster?: string;
  autoplay?: boolean;
  loop?: boolean;
  muted?: boolean;
  controls?: boolean;
  playsInline?: boolean;
  aspectRatio?: '16/9' | '4/3' | '1/1' | '21/9';
  className?: string;
  caption?: string;
}

const {
  src,
  poster,
  autoplay = false,
  loop = false,
  muted = false,
  controls = true,
  playsInline = true,
  aspectRatio = '16/9',
  className = '',
  caption,
} = Astro.props as Props;

const aspectRatioClasses = {
  '16/9': 'aspect-video',
  '4/3': 'aspect-[4/3]',
  '1/1': 'aspect-square',
  '21/9': 'aspect-[21/9]',
};
---

<figure
  class={`rounded-2xl border border-slate-200 bg-white p-2 shadow-sm dark:border-slate-800 dark:bg-slate-950 ${className}`.trim()}
>
  <div
    class={`relative overflow-hidden rounded-xl bg-slate-900 ${aspectRatioClasses[aspectRatio]}`}
  >
    <video
      src={src}
      poster={poster}
      autoplay={autoplay}
      loop={loop}
      muted={muted}
      controls={controls}
      playsinline={playsInline}
      class="absolute inset-0 h-full w-full object-cover"
    >
      <slot name="fallback">
        <p class="p-4 text-sm font-medium text-slate-100">
          Your browser does not support the video tag.
        </p>
      </slot>
    </video>
  </div>
  {
    (caption || Astro.slots.has('caption')) && (
      <figcaption class="mt-3 text-sm text-slate-700 dark:text-slate-300">
        <slot name="caption">{caption}</slot>
      </figcaption>
    )
  }
</figure>
