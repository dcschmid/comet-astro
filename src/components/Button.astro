---
import { cn } from '../utils/cn';

export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  disabled?: boolean;
  type?: 'button' | 'submit' | 'reset';
  ariaLabel?: string;
  external?: boolean;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className,
  disabled = false,
  type = 'button',
  ariaLabel,
  external,
  ...rest
} = Astro.props as Props & Record<string, any>;

const base =
  'inline-flex items-center justify-center rounded-lg font-semibold transition-colors duration-150 focus-visible:outline-none focus-visible:ring-4 focus-visible:ring-offset-2 focus-visible:ring-offset-white dark:focus-visible:ring-offset-slate-900 disabled:pointer-events-none disabled:opacity-50';
const sizes: Record<string, string> = {
  sm: 'h-9 px-3 text-sm',
  md: 'h-10 px-4 text-sm',
  lg: 'h-12 px-6 text-base',
};
const variants: Record<string, string> = {
  primary:
    'border border-blue-900 bg-blue-950 text-blue-50 shadow-sm hover:bg-blue-900 focus-visible:ring-blue-200 dark:border-blue-200 dark:bg-blue-100 dark:text-blue-950 dark:hover:bg-blue-200 dark:focus-visible:ring-blue-300',
  secondary:
    'border border-slate-800 bg-slate-900 text-slate-50 shadow-sm hover:bg-slate-800 focus-visible:ring-slate-200 dark:border-slate-200 dark:bg-slate-100 dark:text-slate-950 dark:hover:bg-slate-200 dark:focus-visible:ring-slate-400',
  ghost:
    'border border-transparent bg-transparent text-slate-900 hover:bg-slate-100 focus-visible:ring-slate-300 dark:text-slate-50 dark:hover:bg-slate-800 dark:focus-visible:ring-slate-500',
};
const classes = cn(base, sizes[size], variants[variant], className);
const defaultExternal =
  typeof href === 'string' && /^https?:\/\//i.test(href ?? '');
const isExternal = typeof external === 'boolean' ? external : defaultExternal;
---

{
  href ? (
    <a
      href={href}
      class={classes}
      aria-label={ariaLabel}
      target={isExternal ? '_blank' : undefined}
      rel={isExternal ? 'noopener noreferrer' : undefined}
      {...rest}
    >
      <slot />
      {isExternal && (
        <>
          <span class="sr-only">(opens in a new tab)</span>
          <svg
            aria-hidden="true"
            class="ml-2 h-3.5 w-3.5 shrink-0 text-inherit"
            viewBox="0 0 20 20"
            fill="none"
          >
            <path
              d="M5 5h4m0 0h6m-6 0v6m6-6-9.5 9.5"
              stroke="currentColor"
              stroke-width="1.6"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>
        </>
      )}
    </a>
  ) : (
    <button
      type={type}
      class={classes}
      disabled={disabled}
      aria-label={ariaLabel}
      {...rest}
    >
      <slot />
    </button>
  )
}
