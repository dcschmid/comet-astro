---
import { cn } from '../utils/cn';

export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  disabled?: boolean;
  type?: 'button' | 'submit' | 'reset';
  ariaLabel?: string;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className,
  disabled = false,
  type = 'button',
  ariaLabel,
  ...rest
} = Astro.props as Props & Record<string, any>;

const base =
  'inline-flex items-center justify-center rounded-lg font-semibold transition focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-55';
const sizes: Record<string, string> = {
  sm: 'h-9 px-3 text-sm',
  md: 'h-10 px-4 text-sm',
  lg: 'h-12 px-6 text-base',
};
const variants: Record<string, string> = {
  primary:
    'border border-blue-600 bg-blue-600 text-white shadow-sm hover:bg-blue-500 focus-visible:ring-blue-500 focus-visible:ring-offset-white dark:border-blue-500 dark:bg-blue-500 dark:hover:bg-blue-400 dark:focus-visible:ring-offset-slate-900',
  secondary:
    'border border-slate-300 bg-white text-slate-900 shadow-sm hover:bg-slate-100 focus-visible:ring-slate-400 focus-visible:ring-offset-white dark:border-slate-600 dark:bg-slate-900 dark:text-slate-100 dark:hover:bg-slate-800 dark:focus-visible:ring-offset-slate-900',
  ghost:
    'border border-transparent bg-transparent text-slate-900 hover:bg-slate-100 focus-visible:ring-slate-400 focus-visible:ring-offset-white dark:text-slate-100 dark:hover:bg-slate-800 dark:focus-visible:ring-offset-slate-900',
};
const classes = cn(base, sizes[size], variants[variant], className);
---

{
  href ? (
    <a href={href} class={classes} aria-label={ariaLabel} {...rest}>
      <slot />
    </a>
  ) : (
    <button
      type={type}
      class={classes}
      disabled={disabled}
      aria-label={ariaLabel}
      {...rest}
    >
      <slot />
    </button>
  )
}
