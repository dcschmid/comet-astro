---
interface Props {
  title?: string;
  level?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
  className?: string;
  textSize?: 'sm' | 'base' | 'lg' | 'xl' | '2xl' | '3xl';
  textAlign?: 'left' | 'center' | 'right';
}

const {
  title,
  level = 'h1',
  className = '',
  textSize = 'lg',
  textAlign = 'left',
} = Astro.props as Props;
const Tag = level;

const baseClasses = [
  'font-bold leading-tight tracking-tight',
  'text-balance break-words',
].join(' ');

const textSizeClasses: Record<NonNullable<Props['textSize']>, string> = {
  sm: 'text-lg md:text-xl',
  base: 'text-xl md:text-2xl',
  lg: 'text-2xl md:text-3xl',
  xl: 'text-3xl md:text-4xl',
  '2xl': 'text-4xl md:text-5xl',
  '3xl': 'text-5xl md:text-6xl',
};

const textAlignClasses: Record<NonNullable<Props['textAlign']>, string> = {
  left: 'text-left',
  center: 'text-center',
  right: 'text-right',
};

const classes = [
  baseClasses,
  textSizeClasses[textSize],
  textAlignClasses[textAlign],
  className,
]
  .filter(Boolean)
  .join(' ');
---

<Tag class={classes}>{title || <slot />}</Tag>
